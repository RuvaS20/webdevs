<?php
session_start();
require_once '../db/database.php';

if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    exit('Invalid request');
}

$quiz_id = $_POST['quiz_id'] ?? 0;
$answers = $_POST['answers'] ?? [];
$total_questions = 0;
$correct_answers = 0;
$question_results = [];

try {
    $pdo->beginTransaction();

    // Create attempt record
    $stmt = $pdo->prepare("INSERT INTO quiz_attempts (student_id, quiz_id, start_time, total_score) 
                          VALUES (:student_id, :quiz_id, NOW(), 0)");
    $stmt->execute([
        ':student_id' => $_SESSION['user_id'],
        ':quiz_id' => $quiz_id
    ]);
    
    $attempt_id = $pdo->lastInsertId();

    // Get questions and check answers
    $stmt = $pdo->prepare("SELECT * FROM quiz_questions WHERE quiz_id = ?");
    $stmt->execute([$quiz_id]);
    $questions = $stmt->fetchAll();

    foreach ($questions as $question) {
        $total_questions++;
        $user_answer = $answers[$question['question_id']] ?? '';
        $is_correct = false;

        switch ($question['question_type']) {
            case 'multiple_choice':
                $is_correct = strcasecmp($user_answer, $question['correct_answer']) === 0;
                $options = json_decode($question['options'], true);
                break;
            case 'true_false':
                $is_correct = strcasecmp($user_answer, $question['correct_answer']) === 0;
                break;
        }

        if ($is_correct) {
            $correct_answers++;
        }

        // Save response
        $stmt = $pdo->prepare("INSERT INTO quiz_responses (attempt_id, question_id, user_answer, is_correct, points_earned) 
                              VALUES (:attempt_id, :question_id, :user_answer, :is_correct, :points_earned)");
        $stmt->execute([
            ':attempt_id' => $attempt_id,
            ':question_id' => $question['question_id'],
            ':user_answer' => $user_answer,
            ':is_correct' => $is_correct,
            ':points_earned' => $is_correct ? $question['points'] : 0
        ]);

        $question_results[] = [
            'question' => $question['question_text'],
            'userAnswer' => $user_answer,
            'correctAnswer' => $question['correct_answer'],
            'correct' => $is_correct
        ];
    }

    // Calculate and update total score
    $score = ($total_questions > 0) ? ($correct_answers / $total_questions) * 100 : 0;
    
    $stmt = $pdo->prepare("UPDATE quiz_attempts SET total_score = :score, end_time = NOW() 
                          WHERE attempt_id = :attempt_id");
    $stmt->execute([
        ':score' => $score,
        ':attempt_id' => $attempt_id
    ]);

    $pdo->commit();

    // Send response
    echo json_encode([
        'success' => true,
        'score' => round($score, 2),
        'questions' => $question_results
    ]);

} catch (Exception $e) {
    $pdo->rollBack();
    echo json_encode([
        'success' => false,
        'error' => 'An error occurred while processing your quiz'
    ]);
}
